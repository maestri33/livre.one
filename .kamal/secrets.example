# This is a template for the `.kamal/secrets` file that is used by Kamal to deploy the service.
# The template only includes the essential settings required to deploy and run the service.
# You can copy this file to `.kamal/secrets` and fill in the values, then delete this header
###############################################################################

# This file should contain all the secrets required by *production* application.
# This file is ignored by git by default to avoid accidentally exposing secrets in your repository.
# The content of this file should be similar to that of the `.env` file in the project root
# which is used for local development.

# Note: when you add variables to this file you will also need to update the `env: secret` section
# of your `config/deploy.yml` file to make them available in your production deployment.

###
### Kamal settings
###
# Kamal config expects the service to be running on this port
PORT=8000

# Docker registry password
KAMAL_REGISTRY_PASSWORD=

# Docker postgres password
POSTGRES_PASSWORD=

###
### Django settings
###
# Use the production settings file
DJANGO_SETTINGS_MODULE=core.settings_production
SECRET_KEY=

# change host for multi-host deployments
DATABASE_URL=postgres://core:<postgres_password>@core-postgres:5432/core

# change host for multi-host deployments
REDIS_URL=redis://core-redis:6379

GOOGLE_ANALYTICS_ID=''
SENTRY_DSN=''

SIMPLE_JWT_SIGNING_KEY='django-insecure-ipAtyLbWj1u386RCt7PMwrxSjty3DARLUeU57KOil8ArOfWRd06NVsqFPF46'
CORS_ALLOWED_ORIGINS="http://localhost:5173,http://127.0.0.1:5173"

# turnstile setup - add your keys here to enable turnstile
TURNSTILE_KEY=""
TURNSTILE_SECRET=""

# put your stripe keys here
STRIPE_LIVE_PUBLIC_KEY="pk_live_***"
STRIPE_LIVE_SECRET_KEY="sk_live_***"
STRIPE_TEST_PUBLIC_KEY="pk_test_***"
STRIPE_TEST_SECRET_KEY="sk_test_***"
DJSTRIPE_WEBHOOK_SECRET="whsec_***"

ACTIVE_ECOMMERCE_PRODUCT_IDS="prod_abc,prod_def"

ENABLE_DEBUG_TOOLBAR=True

OPENAI_API_KEY="sk-***"
DEFAULT_LLM_MODEL="gpt-4o"
STABILITY_AI_API_KEY="sk-***"

# public media storage config
USE_S3_MEDIA=False
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_STORAGE_BUCKET_NAME=

# You can uncomment these settings to use a different email backend in settings.py.
# Depending on your selected backend, you will probably need to add additional settings / environment variables

# DEFAULT_FROM_EMAIL="contato@maestri.email"
# SERVER_EMAIL="noreply@Livre.one"

# EMAIL_BACKEND="anymail.backends.mailgun.EmailBackend"
# MAILGUN_API_KEY="key-***"
# MAILGUN_SENDER_DOMAIN="example.com"

HEALTH_CHECK_TOKENS=
